/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

//apply plugin: 'maven-publish' // Apply this plugin at the top of your library build.gradle

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

















def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file

def getVersionName = { ->
 return "1.0.0" // Replace with version Name
}

def getArtificatId = { ->
 return "HostGrad" // Replace with library name ID
}

publishing { 
	repositories {
		maven {
			name = "HostGrad"
			url = uri("https://maven.pkg.github.com/arpandutta0000/HostGrad")
			credentials {
				username = githubProperties['gpr.usr']
				password = githubProperties['gpr.key']
			}	
		}
	}
	
	publications {
		/*
		bar(MavenPublication) {
			groupId 'com.sample.asd' // Replace with group ID
			artifactId getArtificatId()
			version getVersionName()
			artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
    	}
    	*/
    	gpr(MavenPublication) {
            from(components.java)
        }
 	}
}

